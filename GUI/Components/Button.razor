<!-- use a div instead of a button to ignore default styling -->
<div class="button @classes"
    @onclick="OnClick"
    @onmouseover="@(e => { active = true; UpdateClassStrings(); })"
    @onmouseout="@(e => { active = false; UpdateClassStrings(); })"
    title="@tooltip">
    <div class="d-flex">
        <div class="edge mr-1 bg-primary @classes"></div>
        <div class="main bg-primary @classes">
            @text
        </div>
        <div class="edge ml-1 bg-primary @classes"></div>
    </div>
</div>

@code {
    [Parameter]
    public string text { get; set; } = default!;
    [Parameter]
    public bool disabled { get; set; } = false;
    [Parameter]
    public string? tooltip { get; set; } = null;
    [Parameter]
    public EventCallback onClickCallback { get; set; } = default!;

    private bool active = false;
    private string classes = "";

    protected override void OnParametersSet()
    {
        UpdateClassStrings();
    }

    protected void UpdateClassStrings()
    {
        if (disabled)
        {
            classes = "disabled";
            return;
        }
        else if (active)
        {
            classes = "active";
            return;
        }

        classes = "";
        return;
    }

    protected async Task OnClick(MouseEventArgs e)
    {
        if (!disabled)
        {
            await onClickCallback.InvokeAsync();
        }
    }
}
