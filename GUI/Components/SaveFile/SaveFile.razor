@using Core.SaveFiles.Models
@using GUI.Data
@using Core.Enums
@using System.Reactive.Linq
@using GUI.Data.Enums

<div class="@(orientation == Orientation.Left ? "ml-5" : "ml-3") @(orientation == Orientation.Right ? "mr-5" : "mr-3") pl-1 pr-1 position-relative save-file-container @(isActive() ? "active" : "")"
    @onmouseover="@(e => highlight = true)"
    @onmouseout="@(e => highlight = false)">
    <div class="top-left @(highlight ? "highlight" : "") @(isActive() ? "active" : "")"></div>
    <div class="top-right @(highlight ? "highlight" : "") @(isActive() ? "active" : "")"></div>
    <div class="bottom-left @(highlight ? "highlight" : "") @(isActive() ? "active" : "")"></div>
    <div class="bottom-right @(highlight ? "highlight" : "") @(isActive() ? "active" : "")"></div>

    @if (saveFile != null)
    {
        <div class="row pb-2">
            <div class="col">
                <Dwarf id="@($"{saveFilePlatform.ToString().ToLower()}-dwarf-engineer")" dwarf="@saveFile.Engineer" type="DwarfType.Engineer"/>
                <Dwarf id="@($"{saveFilePlatform.ToString().ToLower()}-dwarf-scout")" dwarf="@saveFile.Scout" type="DwarfType.Scout"/>
                <Dwarf id="@($"{saveFilePlatform.ToString().ToLower()}-dwarf-driller")" dwarf="@saveFile.Driller" type="DwarfType.Driller" />
                <Dwarf id="@($"{saveFilePlatform.ToString().ToLower()}-dwarf-gunner")" dwarf="@saveFile.Gunner" type="DwarfType.Gunner" />
            </div>
        </div>
        <div class="row pb-2">
            <div class="col">
                <SaveFileMetadata id="@($"{saveFilePlatform.ToString().ToLower()}-meta")" saveFile="@saveFile" />
            </div>
        </div>
    }
    else
    {
        <div class="pl-1 pr-1 d-flex justify-content-center align-items-center missing-save-file-container"
            @onmouseover="@(e => highlight = true)"
            @onmouseout="@(e => highlight = false)">
            <div class="mt-5 mb-5 d-flex flex-column align-items-center">
                <div class="missing-save-file-content-container position-relative">
                    <img class="missing-save-file position-absolute" src="icons/drg_icons/warning_elite_threat_icon.png" />
                    <div class="missing-save-file-background position-absolute"></div>
                </div>
                @if (saveFilePlatform == Platform.Steam)
                {
                    <h3 class="missing-save-file-header mb-2">Unable to find Steam save file</h3>
                    <ul class="missing-save-file-text mt-0 mb-0">
                        <li>Make sure DRG is installed through Steam.</li>
                        <li>Ensure that you've skipped through the tutorial and have made it back to the space rig, then quit DRG.</li>
                        <li>Restart this app.</li>
                        <li>If you're still seeing this error, fully <span class="link" @onclick="@(e => OpenExitSteamImageInBrowser())">exit out of Steam</span> and reopen it. Then restart this app.</li>
                    </ul>
                }
                else if (saveFilePlatform == Platform.Xbox)
                {
                    <h3 class="missing-save-file-header mb-2">Unable to find Xbox save file</h3>
                    <ul class="missing-save-file-text mt-0 mb-0">
                        <li>Make sure DRG is installed through Xbox.</li>
                        <li>Ensure that you've skipped through the tutorial and have made it back to the space rig, then quit DRG.</li>
                        <li>Finally, restart this app.</li>
                    </ul>
                }
                else
                {   
                    // Generic fallback, that's honestly not necessary right now. Maybe the DRG devs will add more platforms in the future?
                    <h3 class="missing-save-file-header mb-2">Unable to find save file</h3>
                }
            </div>
        </div>
    }
</div>

@code {
    [Inject]
    public SyncerManagerService SyncerManager { get; set; } = default!;

    [Parameter]
    public Platform saveFilePlatform { get; set; }
    [Parameter]
    public Core.SaveFiles.Models.SaveFile? saveFile { get; set; }
    [Parameter]
    public Orientation orientation { get; set; } = Orientation.Left;

    private bool highlight = false;
    private Core.SaveFiles.Models.SaveFile? Overwriter;

    protected override void OnInitialized()
    {
        Overwriter = SyncerManager.Overwriter;
        SyncerManager.OverwriterChanged.DistinctUntilChanged()
            .Select(saveFile => Overwriter = saveFile)
            .Subscribe();
    }

    private void OpenExitSteamImageInBrowser()
    {
        String url = "https://raw.githubusercontent.com/naschorr/deep-rock-galactic-save-syncer/main/resources/images/exit_steam_guide.png";

        ElectronNET.API.Electron.Shell.OpenExternalAsync(url);
    }

    private bool isActive()
    {
        if (saveFile != null)
        {
            return ReferenceEquals(saveFile, Overwriter);
        }

        return false;
    }
}
